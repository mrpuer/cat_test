{"version":3,"sources":["components/MainContent/styled.js","components/FiltersBar/StyledFilter.js","services/DevService.js","conf.js","components/FiltersBar/FiltersBar.jsx","components/DataTable/StyledTable.js","components/DataTable/DataTable.jsx","components/Pagination/styledPagination.js","components/Pagination/Pagination.jsx","components/MainContent/MainContent.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["StyledMAinContent","styled","div","StyledTitle","h1","StyledFilter","data","artnumber","name","brand","weight","quantity","price","stock","this","items","page","filter","filteredElements","el","from","products","slice","countAll","length","filtersSet","Set","map","product","Array","FiltersBar","setFilter","activeFilter","useState","filters","setFilters","useEffect","DevService","getFilters","value","onChange","e","target","key","onClick","StyledTable","table","DataTable","elements","element","type","checked","readOnly","PaginationContainer","Pagination","pages","currentPage","setCurrentPage","prevNextPageHandler","direction","result","i","push","makePages","MainContent","productsData","setProducts","setActiveFilter","getProducts","Math","ceil","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ycAEO,IAAMA,EAAoBC,IAAOC,IAAV,KAKjBC,EAAcF,IAAOG,GAAV,K,+6BCLjB,IAAMC,EAAcJ,IAAOC,IAAT,K,gBCAnBI,EAAO,CAAC,CACZC,UAAW,OACXC,KAAM,mDACNC,MAAO,QACPC,OAAQ,KACRC,SAAU,EACVC,MAAO,KACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,yDACNC,MAAO,qBACPC,OAAQ,KACRC,SAAU,EACVC,MAAO,IACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,2DACNC,MAAO,UACPC,OAAQ,GACRC,SAAU,GACVC,MAAO,KACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,uCACNC,MAAO,8FACPC,OAAQ,GACRC,SAAU,GACVC,MAAO,EACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,mDACNC,MAAO,QACPC,OAAQ,KACRC,SAAU,EACVC,MAAO,KACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,yDACNC,MAAO,qBACPC,OAAQ,KACRC,SAAU,EACVC,MAAO,IACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,2DACNC,MAAO,UACPC,OAAQ,GACRC,SAAU,GACVC,MAAO,KACPC,MAAO,GACN,CACDN,UAAW,OACXC,KAAM,uCACNC,MAAO,8FACPC,OAAQ,GACRC,SAAU,GACVC,MAAO,EACPC,MAAO,IAoBM,M,WAhBb,aAAe,oBACbC,KAAKC,MAAQT,E,wDAEHU,EAAMC,GAChB,IAAMC,EAAmBD,EAASH,KAAKC,MAAME,QAAO,SAAAE,GAAE,OAAIA,EAAGV,QAAUQ,KAAUH,KAAKC,MAChFK,EC1EoB,GD0EKJ,EAAO,GAEtC,MAAO,CAAEK,SADYH,EAAiBI,MAAMF,EAAMA,EC3ExB,GD4EQG,SAAUL,EAAiBM,U,mCAI7D,IAAMC,EAAa,IAAIC,IAAIZ,KAAKC,MAAMY,KAAI,SAAAC,GAAO,OAAIA,EAAQnB,UAC7D,OAAOoB,MAAMT,KAAKK,O,MEzDPK,MApBf,YAAkD,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAAgB,EACjBC,mBAAS,IADQ,mBACxCC,EADwC,KAC/BC,EAD+B,KAO/C,OAJAC,qBAAU,WACRD,EAAWE,EAAWC,gBACrB,IAGD,kBAACjC,EAAD,KACE,8BACE,4BAAQkC,MAAOP,EAAcQ,SAAU,SAACC,GAAD,OAAOV,EAAUU,EAAEC,OAAOH,SAC/D,4BAAQA,MAAM,IAAd,kCACCL,EAAQP,KAAI,SAAAV,GAAM,OAAI,4BAAQ0B,IAAK1B,EAAQsB,MAAOtB,GAASA,OAE9D,4BAAQ2B,QAAS,kBAAMb,EAAU,MAAjC,4F,+aChBD,IAAMc,EAAc5C,IAAO6C,MAAV,KCoCTC,MAnCf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,kBAACH,EAAD,KACE,+BACA,4BACE,0EACA,wGACA,8DACA,kDACA,0EACA,wDACA,mFAGF,+BACCG,EAASrB,KAAI,SAAAsB,GACZ,OACE,wBAAIN,IAAKM,EAAQ1C,WACf,4BAAK0C,EAAQ1C,WACb,4BAAK0C,EAAQzC,MACb,4BAAKyC,EAAQxC,OACb,4BAAKwC,EAAQvC,QACb,4BAAKuC,EAAQtC,UACb,4BAAKsC,EAAQrC,OACb,4BACE,2BAAOsC,KAAK,WAAWC,QAASF,EAAQpC,MAAOuC,UAAQ,Y,mSC1B9D,IAAMC,EAAsBpD,IAAOC,IAAV,KCiCjBoD,EAhCI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eAClCC,EAAsB,SAACC,GACT,SAAdA,EACEH,EAAc,GAChBC,EAAeD,EAAc,GAG3BA,EAAcD,GAChBE,EAAeD,EAAc,IAcnC,OACE,kBAACH,EAAD,KACE,0BAAMT,QAAS,kBAAMc,EAAoB,UAAzC,gEACA,0BAAMd,QAAS,kBAAsB,IAAhBY,GAAqBC,EAAe,KAAzD,KAZc,WAEhB,IADA,IAAIG,EAAS,GADS,WAEbC,GACPD,EAAOE,KAAK,0BAAMnB,IAAKkB,EAAGjB,QAAS,kBAAMa,EAAeI,KAAKA,KADtDA,EAAI,EAAGA,GAAKN,EAAOM,GAAK,EAAI,EAA5BA,GAIT,OAAOD,EAOFG,GACH,0BAAMnB,QAAS,kBAAMc,EAAoB,UAAzC,4DCSSM,MA/Bf,WAAwB,IAAD,EACe/B,mBAAS,CAAEZ,SAAU,GAAIE,SAAU,IADlD,mBACd0C,EADc,KACAC,EADA,OAEiBjC,mBAAS,GAF1B,mBAEduB,EAFc,KAEDC,EAFC,OAGmBxB,mBAAS,IAH5B,mBAGdD,EAHc,KAGAmC,EAHA,KAgBrB,OAXA/B,qBAAU,WACR8B,EAAY7B,EAAW+B,YAAY,EAAG,OACrC,IAEHhC,qBAAU,WACR8B,EAAY7B,EAAW+B,YAAYZ,EAAaxB,IAC7CwB,EAAcS,EAAa1C,SNnBJ,GMmBiD,IAAhBiC,GACzDC,EAAeY,KAAKC,KAAKL,EAAa1C,SNpBd,MMsBzB,CAACiC,EAAaxB,EAAciC,EAAa1C,WAG1C,oCACE,kBAACpB,EAAD,mBACA,kBAACH,EAAD,KACE,6BACA,kBAAC,EAAD,CAAWgD,SAAUiB,EAAa5C,WAClC,kBAAC,EAAD,CAAYkC,MAAOU,EAAa1C,SN9BV,EM8BqCiC,YAAaA,EAAaC,eAAgBA,IAFrG,yHAG0BQ,EAAa1C,UAEvC,kBAAC,EAAD,CAAYQ,UAAWoC,EAAiBnC,aAAcA,OC1B/CuC,MAJf,WACE,OAAO,kBAAC,EAAD,OCQWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1961aaca.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledMAinContent = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nexport const StyledTitle = styled.h1`\n    padding-left: 50%;\n    font-size: 24px;\n`;","import styled from \"styled-components\";\n\nexport const StyledFilter= styled.div`\n  padding: 0 20px;\n  form {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    \n    select {\n      position: relative;\n      display: block;\n      padding: 10px;\n      border: 2px solid grey;\n      border-radius: 0;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-family: inherit;\n      font-size: 14px;\n      color: #444;\n    }\n    \n    &:after {\n      content: \"\";\n      display: block;\n      border-style: solid;\n      border-width: 10px 10px 0 10px;\n      border-color: silver transparent transparent transparent;\n      pointer-events: none;\n      position: absolute;\n      top: 18px;\n      right: 1rem;\n      z-index: 1;\n     }\n     \n    button {\n      padding: 10px;\n      border: 2px solid grey;\n      margin-top: 20px;\n      font-size: 14px;\n    }\n  }\n`;\n","import {ITEMS_PER_PAGE} from \"../conf\";\n\nconst data = [{\n  artnumber: '0001',\n  name: 'Кастрюля',\n  brand: 'Tefal',\n  weight: 1200,\n  quantity: 1,\n  price: 1700,\n  stock: 1\n}, {\n  artnumber: '0002',\n  name: 'Сковорода',\n  brand: 'КМЗ',\n  weight: 1900,\n  quantity: 1,\n  price: 950,\n  stock: 1\n}, {\n  artnumber: '0003',\n  name: 'Ложка нерж.',\n  brand: 'Tescoma',\n  weight: 95,\n  quantity: 12,\n  price: 1200,\n  stock: 0\n}, {\n  artnumber: '0004',\n  name: 'Спички',\n  brand: 'Красный коммунар',\n  weight: 15,\n  quantity: 20,\n  price: 1,\n  stock: 1\n}, {\n  artnumber: '0005',\n  name: 'Кастрюля',\n  brand: 'Tefal',\n  weight: 1200,\n  quantity: 1,\n  price: 1700,\n  stock: 1\n}, {\n  artnumber: '0006',\n  name: 'Сковорода',\n  brand: 'КМЗ',\n  weight: 1900,\n  quantity: 1,\n  price: 950,\n  stock: 1\n}, {\n  artnumber: '0007',\n  name: 'Ложка нерж.',\n  brand: 'Tescoma',\n  weight: 95,\n  quantity: 12,\n  price: 1200,\n  stock: 0\n}, {\n  artnumber: '0008',\n  name: 'Спички',\n  brand: 'Красный коммунар',\n  weight: 15,\n  quantity: 20,\n  price: 1,\n  stock: 1\n}];\n\nclass DevService {\n  constructor() {\n    this.items = data;\n  }\n  getProducts(page, filter) {\n    const filteredElements = filter ? this.items.filter(el => el.brand === filter) : this.items;\n    const from = ITEMS_PER_PAGE * (page - 1);\n    const pageElements = filteredElements.slice(from, from + ITEMS_PER_PAGE);\n    return { products:  pageElements, countAll: filteredElements.length};\n  }\n\n  getFilters() {\n    const filtersSet = new Set(this.items.map(product => product.brand));\n    return Array.from(filtersSet)\n  }\n}\n\nexport default new DevService();","export const ITEMS_PER_PAGE = 4;","import React, {useEffect, useState} from \"react\";\nimport { StyledFilter } from \"./StyledFilter\";\nimport DevService from \"../../services/DevService\";\n\nfunction FiltersBar({ setFilter, activeFilter }) {\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    setFilters(DevService.getFilters());\n  }, []);\n\n  return (\n    <StyledFilter>\n      <form>\n        <select value={activeFilter} onChange={(e) => setFilter(e.target.value)}>\n          <option value=\"\">Брэнд</option>\n          {filters.map(filter => <option key={filter} value={filter}>{filter}</option>)}\n        </select>\n        <button onClick={() => setFilter('')}>Сбросить фильтр</button>\n      </form>\n    </StyledFilter>\n  );\n}\n\nexport default FiltersBar;","import styled from \"styled-components\";\n\nexport const StyledTable = styled.table`\n  width: 600px;\n  border-collapse: collapse;\n  border: 1px solid grey;\n  text-align: right;\n  th {\n    border: 1px solid grey;\n    font-weight: bold;\n    background-color: silver;\n    padding: 10px 5px 10px 15px;\n  }\n  td {\n    border: 1px solid grey;\n    padding: 50px 5px;\n  }\n  td:last-child {\n    width: 30px;\n    text-align: center;\n  }\n`;","import React from \"react\";\nimport { StyledTable } from \"./StyledTable\";\n\nfunction DataTable({ elements }) {\n  return (\n    <StyledTable>\n      <thead>\n      <tr>\n        <th>Артикул</th>\n        <th>Наименование</th>\n        <th>Брэнд</th>\n        <th>Вес</th>\n        <th>Фасовка</th>\n        <th>Цена</th>\n        <th>В наличии</th>\n      </tr>\n      </thead>\n      <tbody>\n      {elements.map(element => {\n        return (\n          <tr key={element.artnumber}>\n            <td>{element.artnumber}</td>\n            <td>{element.name}</td>\n            <td>{element.brand}</td>\n            <td>{element.weight}</td>\n            <td>{element.quantity}</td>\n            <td>{element.price}</td>\n            <td>\n              <input type=\"checkbox\" checked={element.stock} readOnly/>\n            </td>\n          </tr>\n        )\n      })}\n      </tbody>\n    </StyledTable>\n  );\n}\n\nexport default DataTable;","import styled from \"styled-components\";\n\nexport const PaginationContainer = styled.div`\n  padding: 20px 0;\n  display: flex;\n  align-items: flex-end;\n  span {\n    min-width: 20px;\n    padding: 5px;\n    border: 2px solid grey;\n    margin-right: 5px;\n    cursor: pointer;\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport {PaginationContainer} from \"./styledPagination\";\n\nconst Pagination = ({ pages, currentPage, setCurrentPage}) => {\n  const prevNextPageHandler = (direction) => {\n    if (direction === 'prev') {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      }\n    } else {\n      if (currentPage < pages) {\n        setCurrentPage(currentPage + 1);\n      }\n    }\n  };\n\n  const makePages = () => {\n    let result = [];\n    for (let i = 2; i <= pages; i += 1) {\n      result.push(<span key={i} onClick={() => setCurrentPage(i)}>{i}</span>);\n    }\n\n    return result;\n  };\n\n  return (\n    <PaginationContainer>\n      <span onClick={() => prevNextPageHandler('prev')}>Предыдущая</span>\n      <span onClick={() => currentPage !== 1 && setCurrentPage(1)}>1</span>\n        {makePages()}\n      <span onClick={() => prevNextPageHandler('next')}>Следующая</span>\n  </PaginationContainer>\n  );\n};\n\nexport default Pagination;","import React, {useEffect, useState} from \"react\";\nimport {StyledMAinContent, StyledTitle} from './styled';\nimport FiltersBar from \"../FiltersBar/FiltersBar\";\nimport DataTable from \"../DataTable/DataTable\";\nimport DevService from \"../../services/DevService\";\nimport Pagination from \"../Pagination/Pagination\";\nimport {ITEMS_PER_PAGE} from \"../../conf\";\n\nfunction MainContent() {\n  const [productsData, setProducts] = useState({ products: [], countAll: 0 });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [activeFilter, setActiveFilter] = useState('');\n\n  useEffect(() => {\n    setProducts(DevService.getProducts(1, ''));\n  }, []);\n\n  useEffect(() => {\n    setProducts(DevService.getProducts(currentPage, activeFilter));\n    if(currentPage > productsData.countAll / ITEMS_PER_PAGE && currentPage !== 1) {\n      setCurrentPage(Math.ceil(productsData.countAll / ITEMS_PER_PAGE));\n    }\n  }, [currentPage, activeFilter, productsData.countAll]);\n\n  return (\n    <>\n      <StyledTitle>Cool Store</StyledTitle>\n      <StyledMAinContent>\n        <div>\n        <DataTable elements={productsData.products} />\n        <Pagination pages={productsData.countAll / ITEMS_PER_PAGE} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n          Всего товаров выбрано: {productsData.countAll}\n        </div>\n        <FiltersBar setFilter={setActiveFilter} activeFilter={activeFilter} />\n      </StyledMAinContent>\n    </>\n  );\n}\n\nexport default MainContent;","import React from 'react';\nimport MainContent from './MainContent/MainContent';\n\nfunction App() {\n  return <MainContent />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}